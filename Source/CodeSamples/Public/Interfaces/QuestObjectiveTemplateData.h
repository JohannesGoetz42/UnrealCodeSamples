// Fill out your copyright notice in the Description page of Project Settings.

#pragma once

#include "CoreMinimal.h"
#include "QuestObjectiveData.h"
#include "UObject/Interface.h"
#include "QuestObjectiveTemplateData.generated.h"

class UTradeableItem;
class AInteractionCharacter;
class IHasLocationMarker;

USTRUCT(Blueprintable)
/**
 * This is an objective agnostic wrapper for the quest objective.
 * This is generated by the UQuestGenerator based on a template (see FQuestObjectiveParametersTemplate) at runtime.
 * The objective data will then interpret the data in the SetObjectiveParameters(const FGeneratedQuestObjectiveParameters& NewObjectiveParameters) function.
 */
struct FGeneratedQuestObjectiveParameters
{
	GENERATED_BODY()

	/** The location where the objective should be completed (i.E. a building where PickUps are spawned) */
	const IHasLocationMarker* ObjectiveLocationSource = nullptr;
	/** Actors that are spawned by the quest objective (i.E PickUps) */
	TMap<TSubclassOf<AActor>, FQuestObjectiveSpawnData> SpawnData;
	/** Quest items that are relevant for completing the quest (i.E Items that should be collected by a PickUp and then be delivered to a location) */
	TMap<TSubclassOf<UTradeableItem>, uint32> QuestItems;
};

// This class does not need to be modified.
UINTERFACE(MinimalAPI)
class UQuestObjectiveTemplateData : public UQuestObjectiveData
{
	GENERATED_BODY()
};

/**
 * Interface for quest objectives that can be an objective for generated quests
 */
class CODESAMPLES_API IQuestObjectiveTemplateData : public IQuestObjectiveData
{
	GENERATED_BODY()

	// Add interface functions to this class. This is the class that will be inherited to implement this interface.
public:
	virtual void SetObjectiveParameters(const FGeneratedQuestObjectiveParameters& NewObjectiveParameters) = 0;

#if WITH_EDITOR
	/**
	 * Check if the asset is a valid spawned asset for this objective
	 * This will be called pre save at editor time to help with content creation
	 */
	virtual bool IsValidSpawnAsset(TSubclassOf<AActor> Asset) const { return false; }
#endif
};
